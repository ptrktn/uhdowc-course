install part1.13/Dockerfile material-applications/example-backend
cd material-applications/example-backend && docker build . -t example-backend
Sending build context to Docker daemon   42.5kB
Step 1/12 : FROM ubuntu:latest
latest: Pulling from library/ubuntu
Digest: sha256:82becede498899ec668628e7cb0ad87b6e1c371cb8a1e597d83a47fac21d6af3
Status: Image is up to date for ubuntu:latest
 ---> 1318b700e415
Step 2/12 : EXPOSE 8000
 ---> Running in d8a09a147b55
Removing intermediate container d8a09a147b55
 ---> ff53b3feda30
Step 3/12 : ENV DEBIAN_FRONTEND=noninteractive
 ---> Running in a348e6aaa1af
Removing intermediate container a348e6aaa1af
 ---> 3297afad0035
Step 4/12 : ENV PATH=$PATH:/usr/local/go/bin
 ---> Running in cabd1cafd2ea
Removing intermediate container cabd1cafd2ea
 ---> f5ac4a776dc3
Step 5/12 : ENV PORT 8000
 ---> Running in c00c40d94b7f
Removing intermediate container c00c40d94b7f
 ---> 55d617ec9712
Step 6/12 : WORKDIR /usr/src/app
 ---> Running in c6d2676019d8
Removing intermediate container c6d2676019d8
 ---> 4397fba2a5b7
Step 7/12 : COPY . .
 ---> 431d006dc787
Step 8/12 : RUN apt-get update -qq
 ---> Running in 6579206cb5cc
Removing intermediate container 6579206cb5cc
 ---> 41569221aed8
Step 9/12 : RUN (apt-get -y install curl) > /dev/null 2>&1
 ---> Running in d7cdd13c2a67
Removing intermediate container d7cdd13c2a67
 ---> 9febddbd9c0e
Step 10/12 : RUN curl -sL https://dl.google.com/go/go1.16.6.linux-amd64.tar.gz | gzip -dc | ( cd /usr/local && tar xf - )
 ---> Running in 3007ba742933
Removing intermediate container 3007ba742933
 ---> e1c616857e4c
Step 11/12 : RUN go build
 ---> Running in 251ac90c6bb0
[91mgo: downloading github.com/gin-contrib/cors v1.3.1
[0m[91mgo: downloading github.com/gin-gonic/gin v1.6.3
[0m[91mgo: downloading github.com/gin-contrib/sse v0.1.0
[0m[91mgo: downloading github.com/mattn/go-isatty v0.0.12
[0m[91mgo: downloading github.com/go-redis/redis/v8 v8.4.2
[0m[91mgo: downloading github.com/go-pg/pg/v10 v10.7.3
[0m[91mgo: downloading github.com/go-playground/validator/v10 v10.2.0
[0m[91mgo: downloading github.com/golang/protobuf v1.4.3
[0m[91mgo: downloading github.com/ugorji/go v1.1.7
[0m[91mgo: downloading github.com/ugorji/go/codec v1.1.7
[0m[91mgo: downloading gopkg.in/yaml.v2 v2.3.0
[0m[91mgo: downloading golang.org/x/sys v0.0.0-20201119102817-f84b799fce68
[0m[91mgo: downloading github.com/cespare/xxhash/v2 v2.1.1
[0m[91mgo: downloading github.com/dgryski/go-rendezvous v0.0.0-20200823014737-9f7001d12a5f
[0m[91mgo: downloading go.opentelemetry.io/otel v0.14.0
[0m[91mgo: downloading mellium.im/sasl v0.2.1
[0m[91mgo: downloading github.com/go-pg/zerochecker v0.2.0
[0m[91mgo: downloading github.com/jinzhu/inflection v1.0.0
[0m[91mgo: downloading github.com/vmihailenco/msgpack/v5 v5.0.0
[0m[91mgo: downloading github.com/vmihailenco/tagparser v0.1.2
[0m[91mgo: downloading github.com/go-playground/universal-translator v0.17.0
[0m[91mgo: downloading github.com/leodido/go-urn v1.2.0
[0m[91mgo: downloading google.golang.org/protobuf v1.25.0
[0m[91mgo: downloading github.com/tmthrgd/go-hex v0.0.0-20190904060850-447a3041c3bc
[0m[91mgo: downloading github.com/vmihailenco/bufpool v0.1.11
[0m[91mgo: downloading golang.org/x/crypto v0.0.0-20201117144127-c1f2f97bffc9
[0m[91mgo: downloading github.com/go-playground/locales v0.13.0
[0mRemoving intermediate container 251ac90c6bb0
 ---> c251ba2a2893
Step 12/12 : CMD ["./server"]
 ---> Running in 7da77e20b0c8
Removing intermediate container 7da77e20b0c8
 ---> da9a6bcb3ae0
Successfully built da9a6bcb3ae0
Successfully tagged example-backend:latest
docker run -d -p 8080:8000 example-backend
64895bba3fb50c306778baccb15da1ad6b7dd815f098f1c9a105707940781b55
sleep 10
test "pong" = "`curl -s http://localhost:8080/ping`" && echo SUCCESS
SUCCESS
